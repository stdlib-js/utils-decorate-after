{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/factory.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\n\n\n// FUNCTIONS //\n\n/**\n* Applies provided arguments to a function and passes the result to another function.\n*\n* @private\n* @param {Function} fcn - function\n* @param {Array} args - function arguments\n* @param {Function} after - function to invoke with the result of `fcn`\n* @param {*} thisArg - evaluation context for `after`\n* @returns {*} result\n*/\nfunction apply( fcn, args, after, thisArg ) {\n\tvar r1 = fcn.apply( null, args );\n\tvar r2 = after.call( thisArg, r1 );\n\treturn ( r2 === void 0 ) ? r1 : r2;\n}\n\n\n// MAIN //\n\n/**\n* Decorates a provided function such that the function's return value is provided as an argument to another function.\n*\n* @param {Function} fcn - function to decorate\n* @param {NonNegativeInteger} arity - number of parameters\n* @param {Function} after - function to invoke with the result of the decorated function\n* @param {*} [thisArg] - evaluation context for `after`\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a function\n* @returns {Function} decorator\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter( abs, 1, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n*\n* function log( v ) {\n*     console.log( v );\n* }\n*\n* var f = decorateAfter( abs, 1, log );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n*\n* function counter() {\n*     this.count += 1;\n* }\n*\n* var ctx = {\n*     'count': 0\n* };\n*\n* var f = decorateAfter( abs, 1, counter, ctx );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* var count = ctx.count;\n* // returns 2\n*/\nfunction decorateAfter( fcn, arity, after, thisArg ) {\n\tvar fcns;\n\tvar f;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isFunction( after ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', after ) );\n\t}\n\t// NOTE: we select a specific signature so that `fcn.length` is preserved, thus matching the definition of a \"decorator\" where the decorator function should be transparent to external clients (i.e., have a matching signature). While more recent JavaScript environments allow `Function.prototype.length` to be configurable, older environments do not and error when attempting to manually specify the value for a function's length. We cap support for matching signature length as signatures with many parameters are likely to be exceedingly rare, especially when used in conjunction with this API...\n\tfcns = [ fN, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10 ];\n\tif ( !isNonNegativeInteger( arity ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', arity ) );\n\t}\n\tif ( arity < fcns.length ) {\n\t\tf = fcns[ arity ];\n\t} else {\n\t\tf = fN;\n\t}\n\treturn f;\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {...*} [args] - arguments\n\t* @returns {*} result\n\t*/\n\tfunction fN() {\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @returns {*} result\n\t*/\n\tfunction f1( x0 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\t// NOTE: the use of a `for` loop is intentional (both here and below), as JavaScript does not require that only a fixed number of arguments be provided; the number of provided arguments may be more or less than the signature specifies.\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @returns {*} result\n\t*/\n\tfunction f2( x0, x1 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @returns {*} result\n\t*/\n\tfunction f3( x0, x1, x2 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @returns {*} result\n\t*/\n\tfunction f4( x0, x1, x2, x3 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @returns {*} result\n\t*/\n\tfunction f5( x0, x1, x2, x3, x4 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @returns {*} result\n\t*/\n\tfunction f6( x0, x1, x2, x3, x4, x5 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @returns {*} result\n\t*/\n\tfunction f7( x0, x1, x2, x3, x4, x5, x6 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @param {*} x7 - eighth argument\n\t* @returns {*} result\n\t*/\n\tfunction f8( x0, x1, x2, x3, x4, x5, x6, x7 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @param {*} x7 - eighth argument\n\t* @param {*} x8 - ninth argument\n\t* @returns {*} result\n\t*/\n\tfunction f9( x0, x1, x2, x3, x4, x5, x6, x7, x8 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n\n\t/**\n\t* Evaluates a function and passes the result to another function.\n\t*\n\t* @private\n\t* @param {*} x0 - first argument\n\t* @param {*} x1 - second argument\n\t* @param {*} x2 - third argument\n\t* @param {*} x3 - fourth argument\n\t* @param {*} x4 - fifth argument\n\t* @param {*} x5 - sixth argument\n\t* @param {*} x6 - seventh argument\n\t* @param {*} x7 - eighth argument\n\t* @param {*} x8 - ninth argument\n\t* @param {*} x9 - tenth argument\n\t* @returns {*} result\n\t*/\n\tfunction f10( x0, x1, x2, x3, x4, x5, x6, x7, x8, x9 ) { // eslint-disable-line no-unused-vars\n\t\tvar args;\n\t\tvar i;\n\n\t\targs = [];\n\t\tfor ( i = 0; i < arguments.length; i++ ) {\n\t\t\targs.push( arguments[ i ] );\n\t\t}\n\t\treturn apply( fcn, args, after, thisArg );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = decorateAfter;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar reNativeFunction = require( '@stdlib/regexp-native-function' ).REGEXP;\nvar function2string = require( '@stdlib/function-to-string' );\nvar Fcn = require( '@stdlib/function-ctor' );\nvar format = require( '@stdlib/string-format' );\n\n\n// VARIABLES //\n\n/**\n* Captures everything that is not a right parenthesis immediately after the first left parenthesis.\n*\n* Regular expression: `/^\\s*function[^(]*\\(([^)]*)/i`\n*\n* -   `/^\\s*`\n*     -   Match zero or more spaces at beginning\n*\n* -   `function`\n*     -   Match the word `function`\n*\n* -   `[^(]*`\n*     -   Match anything except a left parenthesis `(` zero or more times\n*\n* -   `\\(`\n*     -   Match a left parenthesis `(`\n*\n* -   `()`\n*     -   Capture\n*\n* -   `[^)]*`\n*     -   Match anything except a right parenthesis `)` zero or more times\n*\n* -   `)`\n*     -   Match a right parenthesis `)`\n*\n* -   `/i`\n*     -   Ignore case\n*\n* @private\n* @constant\n* @type {RegExp}\n* @default /^\\s*function[^(]*\\(([^)]*)/i\n*/\nvar RE_PARAMETERS = /^\\s*function[^(]*\\(([^)]*)/i;\n\n\n// MAIN //\n\n/**\n* Decorates a provided function such that the function's return value is provided as an argument to another function.\n*\n* @param {Function} fcn - function to decorate\n* @param {NonNegativeInteger} arity - number of parameters\n* @param {Function} after - function to invoke with the result of the decorated function\n* @param {*} [thisArg] - evaluation context for `after`\n* @throws {TypeError} first argument must be a function\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {TypeError} third argument must be a function\n* @returns {Function} decorator\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter( abs, abs.length, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n*\n* function log( v ) {\n*     console.log( v );\n* }\n*\n* var f = decorateAfter( abs, abs.length, log );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n*\n* function counter() {\n*     this.count += 1;\n* }\n*\n* var ctx = {\n*     'count': 0\n* };\n*\n* var f = decorateAfter( abs, abs.length, counter, ctx );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* var count = ctx.count;\n* // returns 2\n*/\nfunction decorateAfter( fcn, arity, after, thisArg ) {\n\tvar params;\n\tvar str;\n\tvar len;\n\tvar f;\n\tvar i;\n\tif ( !isFunction( fcn ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a function. Value: `%s`.', fcn ) );\n\t}\n\tif ( !isNonNegativeInteger( arity ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', arity ) );\n\t}\n\tif ( !isFunction( after ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. Third argument must be a function. Value: `%s`.', after ) );\n\t}\n\tstr = function2string( fcn );\n\n\t// Code generation. Start with the function definition for creating the decorator:\n\tf = 'return function make(__$$fcn$$__,__$$after$$__,__$$thisArg$$__){';\n\n\t// Include the \"use strict\" directive:\n\tf += '\"use strict\";';\n\n\t// Generate a list of function parameters:\n\tif ( reNativeFunction.test( str ) ) {\n\t\tparams = [];\n\t\tfor ( i = 0; i < arity; i++ ) {\n\t\t\tparams.push( 'x'+i );\n\t\t}\n\t} else {\n\t\tparams = str.match( RE_PARAMETERS )[ 1 ];\n\t\tif ( params ) {\n\t\t\tparams = params.split( ',' );\n\t\t} else {\n\t\t\tparams = [];\n\t\t}\n\t\tlen = params.length;\n\t\tif ( len < arity ) {\n\t\t\tfor ( i = len; i < arity; i++ ) {\n\t\t\t\tparams.push( '__$$x'+i+'$$__' );\n\t\t\t}\n\t\t} else if ( len > arity ) {\n\t\t\tparams.length = arity;\n\t\t}\n\t}\n\tparams = params.join( ',' );\n\n\t// Create the decorator definition:\n\tf += 'return function decorator(' + params + '){';\n\n\t// Initialize an array for storing provided arguments:\n\tf += 'var __$$args$$__=[];';\n\n\t// Gather provided arguments:\n\tf += 'for (var __$$i$$__=0;__$$i$$__<arguments.length;__$$i$$__++){__$$args$$__.push(arguments[__$$i$$__]);}';\n\n\t// Invoke the decorated function:\n\tf += 'var __$$r1$$__ = __$$fcn$$__.apply(null,__$$args$$__);';\n\n\t// Provide the result to the `after` function:\n\tf += 'var __$$r2$$__ = __$$after$$__.call(__$$thisArg$$__,__$$r1$$__);';\n\n\t// Return the result:\n\tf += 'return (__$$r2$$__ === void 0) ? __$$r1$$__ : __$$r2$$__;';\n\n\t// Close the decorator function:\n\tf += '}';\n\n\t// Close the outer function:\n\tf += '}';\n\n\t// Add a source directive for debugging:\n\tf += '//# sourceURL=decorateAfter.factory.js';\n\n\t// Create the function the global scope:\n\treturn (new Fcn( f ))()( fcn, after, thisArg );\n}\n\n\n// EXPORTS //\n\nmodule.exports = decorateAfter;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Decorate a provided function such that the function's return value is provided as an argument to another function.\n*\n* @module @stdlib/utils-decorate-after\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n* var decorateAfter = require( '@stdlib/utils-decorate-after' );\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter( abs, 1, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n* var decorateAfter = require( '@stdlib/utils-decorate-after' );\n*\n* function log( v ) {\n*     console.log( v );\n* }\n*\n* var f = decorateAfter( abs, 1, log );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n* var decorateAfter = require( '@stdlib/utils-decorate-after' );\n*\n* function counter() {\n*     this.count += 1;\n* }\n*\n* var ctx = {\n*     'count': 0\n* };\n*\n* var f = decorateAfter( abs, 1, counter, ctx );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns 5\n*\n* v = f( 5 );\n* // returns 5\n*\n* var count = ctx.count;\n* // returns 2\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-abs' );\n* var decorateAfter = require( '@stdlib/utils-decorate-after' );\n*\n* function negate( v ) {\n*     return -v;\n* }\n*\n* var f = decorateAfter.factory( abs, 1, negate );\n* // returns <Function>\n*\n* var v = f( -5 );\n* // returns -5\n*\n* v = f( 5 );\n* // returns -5\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isFunction", "isNonNegativeInteger", "format", "apply", "fcn", "args", "after", "thisArg", "r1", "r2", "decorateAfter", "arity", "fcns", "f", "fN", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "i", "x0", "x1", "x2", "x3", "x4", "x5", "x6", "x7", "x8", "x9", "require_factory", "__commonJSMin", "exports", "module", "isFunction", "isNonNegativeInteger", "reNativeFunction", "function2string", "Fcn", "format", "RE_PARAMETERS", "decorateAfter", "fcn", "arity", "after", "thisArg", "params", "str", "len", "f", "i", "setReadOnly", "main", "factory"]
}
